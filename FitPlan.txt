import { useState } from "react";
import {
  Card,
  CardContent,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";

export default function FitPlan() {
  const [selectedGoal, setSelectedGoal] = useState("");
  const [showUserForm, setShowUserForm] = useState(false);
  const [showResults, setShowResults] = useState(false);
  const [nutritionGoals, setNutritionGoals] = useState({
    calories: 2000,
    protein: 150,
    carbs: 200,
    fats: 65,
  });

  const handleGoalSelection = (goal) => {
    setSelectedGoal(goal);
    setShowUserForm(true);
    setShowResults(false);
  };

  const handleFormSubmit = (e) => {
    e.preventDefault();
    generatePlan(selectedGoal);
    setShowResults(true);
  };

  const generatePlan = (goal) => {
    let goals = {
      "weight-loss": { calories: 1800, protein: 160, carbs: 180, fats: 50 },
      "muscle-gain": { calories: 2500, protein: 200, carbs: 300, fats: 70 },
      maintenance: { calories: 2000, protein: 150, carbs: 200, fats: 65 },
    };
    setNutritionGoals(goals[goal] || goals.maintenance);
  };

  const exercisePlans = {
    "weight-loss": [
      {
        day: "Monday",
        focus: "Cardio + Full Body",
        exercises: ["30 min HIIT", "Bodyweight Circuit", "Core Work"],
      },
      {
        day: "Wednesday",
        focus: "Strength + Cardio",
        exercises: ["Weight Training", "20 min Running", "Stretching"],
      },
      {
        day: "Friday",
        focus: "High Intensity",
        exercises: ["Circuit Training", "Jump Rope", "Mobility Work"],
      },
    ],
    "muscle-gain": [
      {
        day: "Monday",
        focus: "Upper Body",
        exercises: ["Bench Press", "Rows", "Shoulder Press"],
      },
      {
        day: "Wednesday",
        focus: "Lower Body",
        exercises: ["Squats", "Deadlifts", "Lunges"],
      },
      {
        day: "Friday",
        focus: "Full Body",
        exercises: ["Pull-ups", "Push-ups", "Core Work"],
      },
    ],
    maintenance: [
      {
        day: "Monday",
        focus: "Cardio",
        exercises: ["30 min Swimming", "Yoga", "Core"],
      },
      {
        day: "Wednesday",
        focus: "Strength",
        exercises: ["Full Body Circuit", "Flexibility Work"],
      },
      {
        day: "Friday",
        focus: "Mixed",
        exercises: ["HIIT", "Bodyweight Exercises", "Stretching"],
      },
    ],
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <nav className="bg-gradient-to-r from-[#48a3c5] to-[#3d8ba8] text-white p-4">
        <div className="container mx-auto flex justify-between items-center">
          <h1 className="text-2xl font-bold">FitPlan</h1>
          <div className="hidden md:flex space-x-6">
            <Button variant="link" className="text-white">
              Home
            </Button>
            <Button variant="link" className="text-white">
              My Plan
            </Button>
            <Button variant="link" className="text-white">
              Progress
            </Button>
          </div>
        </div>
      </nav>

      <main className="container mx-auto px-4 py-8">
        <div className="max-w-3xl mx-auto">
          <Card className="mb-6">
            <CardHeader>
              <CardTitle>What's your goal?</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                {["weight-loss", "muscle-gain", "maintenance"].map((goal) => (
                  <Button
                    key={goal}
                    variant="outline"
                    className={`p-4 h-auto flex flex-col items-center ${
                      selectedGoal === goal ? "ring-2 ring-blue-500" : ""
                    }`}
                    onClick={() => handleGoalSelection(goal)}
                  >
                    <i className={`bi bi-arrow-down-circle text-2xl text-blue-500`} />
                    <p className="mt-2">{goal.replace("-", " ").toUpperCase()}</p>
                  </Button>
                ))}
              </div>
            </CardContent>
          </Card>

          {showUserForm && (
            <Card className="mb-6">
              <CardHeader>
                <CardTitle>Tell us about yourself</CardTitle>
              </CardHeader>
              <CardContent>
                <form onSubmit={handleFormSubmit} className="space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div className="space-y-2">
                      <Label>Age</Label>
                      <Input type="number" required />
                    </div>
                    <div className="space-y-2">
                      <Label>Gender</Label>
                      <Select>
                        <SelectTrigger>
                          <SelectValue placeholder="Select gender" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="male">Male</SelectItem>
                          <SelectItem value="female">Female</SelectItem>
                          <SelectItem value="other">Other</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                    <div className="space-y-2">
                      <Label>Weight (kg)</Label>
                      <Input type="number" required />
                    </div>
                    <div className="space-y-2">
                      <Label>Height (cm)</Label>
                      <Input type="number" required />
                    </div>
                  </div>
                  <div className="space-y-2">
                    <Label>Activity Level</Label>
                    <Select>
                      <SelectTrigger>
                        <SelectValue placeholder="Select activity level" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="sedentary">Sedentary</SelectItem>
                        <SelectItem value="light">Lightly Active</SelectItem>
                        <SelectItem value="moderate">Moderately Active</SelectItem>
                        <SelectItem value="very">Very Active</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  <Button type="submit" className="w-full">
                    Generate My Plan
                  </Button>
                </form>
              </CardContent>
            </Card>
          )}

          {showResults && (
            <Card>
              <CardHeader>
                <CardTitle>Your Personalized Plan</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="mb-6">
                  <h3 className="text-lg font-medium mb-3">Daily Nutrition Goals</h3>
                  <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                    {Object.entries(nutritionGoals).map(([key, value]) => (
                      <div key={key} className="p-3 bg-blue-50 rounded-lg">
                        <p className="text-sm text-gray-600">
                          {key.charAt(0).toUpperCase() + key.slice(1)}
                        </p>
                        <p className="text-lg font-semibold">
                          {value}
                          {key === "calories" ? " kcal" : "g"}
                        </p>
                      </div>
                    ))}
                  </div>
                </div>

                <div>
                  <h3 className="text-lg font-medium mb-3">Weekly Exercise Plan</h3>
                  <div className="space-y-3">
                    {exercisePlans[selectedGoal].map((day, index) => (
                      <div key={index} className="bg-gray-50 p-4 rounded-lg">
                        <div className="flex justify-between items-center mb-2">
                          <h4 className="font-medium">
                            {day.day} - {day.focus}
                          </h4>
                        </div>
                        <ul className="list-disc list-inside text-gray-600">
                          {day.exercises.map((exercise, i) => (
                            <li key={i}>{exercise}</li>
                          ))}
                        </ul>
                      </div>
                    ))}
                  </div>
                </div>
              </CardContent>
            </Card>
          )}
        </div>
      </main>
    </div>
  );
}